#!/bin/bash

echo "start"

# Get list of network interfaces excluding loopback and wireless interfaces
INTERFACES=$(ip link show | awk '/^[0-9]+: [^lo]/ {iface=$2; gsub(/:/,"",iface); if (!match(iface, /^ifb[0-9]+$/)) print iface}')

# Exclude wireless interfaces
for IFACE in $INTERFACES; do
    if [ -d "/sys/class/net/$IFACE/wireless" ]; then
        echo "Excluding wireless interface: $IFACE"
        INTERFACES=$(echo "$INTERFACES" | sed "s/$IFACE//")
    fi
done

echo "copying file"

# Backup existing /etc/network/interfaces
if [ -f /etc/network/interfaces ]; then
    cp /etc/network/interfaces /etc/network/interfaces.backup
fi

# Create new /etc/network/interfaces with all interfaces set to dhcp
echo "# This file is generated by a script" > /etc/network/interfaces
echo "auto lo" >> /etc/network/interfaces
echo "iface lo inet loopback" >> /etc/network/interfaces
for IFACE in $INTERFACES; do
    echo "auto $IFACE" >> /etc/network/interfaces
    echo "iface $IFACE inet dhcp" >> /etc/network/interfaces
done

echo "restarting networking"
# Restart networking service
systemctl restart networking

echo "done restarting networking sleeping.."

# Wait for interfaces to acquire IP addresses
sleep 10
echo "done sleeping"

# Check which interfaces have IP addresses assigned
HAS_IP=()
NO_IP=()
for IFACE in $INTERFACES; do
    if ip addr show dev $IFACE | grep -q "inet "; then
        HAS_IP+=("$IFACE")
    else
        NO_IP+=("$IFACE")
    fi
done

echo "checking ip"

# Assign static IP to the first interface without IP
if [ ${#NO_IP[@]} -ge 1 ]; then
    IFACE=${NO_IP[0]}
    # Backup the interfaces file again
    cp /etc/network/interfaces /etc/network/interfaces.backup2
    # Modify the interface configuration
    sed -i "/^auto $IFACE$/,/^$/d" /etc/network/interfaces
    echo "auto $IFACE" >> /etc/network/interfaces
    echo "iface $IFACE inet static" >> /etc/network/interfaces
    echo "    address 192.168.58.1" >> /etc/network/interfaces
    echo "    netmask 255.255.255.0" >> /etc/network/interfaces
    # Restart networking service
    echo "restarting network again"
    systemctl restart networking
    echo "Static IP assigned to $IFACE and networking restarted."
else
    echo "No interfaces without IP addresses to assign static IP."
fi

# Identify primary, secondary, and internal interfaces
if [ ${#HAS_IP[@]} -ge 2 ]; then
    PRIMARY_INTERFACE=${HAS_IP[0]}
    SECONDARY_INTERFACE=${HAS_IP[1]}
else
    echo "Warning: At least two interfaces with IP addresses are required."
    PRIMARY_INTERFACE=""
    SECONDARY_INTERFACE=""
fi

if [ ${#NO_IP[@]} -ge 1 ]; then
    INTERNAL_INTERFACE=${NO_IP[0]}
else
    echo "Warning: At least one interface without IP address is required."
    INTERNAL_INTERFACE=""
fi

# Create /etc/darkflows/d_network.cfg
echo "# /etc/darkflows/d_network.cfg" > /etc/darkflows/d_network.cfg
echo "# Configuration for Primary and Secondary Network Interfaces" >> /etc/darkflows/d_network.cfg
echo "" >> /etc/darkflows/d_network.cfg
echo "# Primary Interface Settings" >> /etc/darkflows/d_network.cfg
echo "PRIMARY_INTERFACE=\"$PRIMARY_INTERFACE\"" >> /etc/darkflows/d_network.cfg
echo "PRIMARY_EGRESS_BANDWIDTH=\"25mbit\"" >> /etc/darkflows/d_network.cfg
echo "PRIMARY_INGRESS_BANDWIDTH=\"500mbit\"" >> /etc/darkflows/d_network.cfg
echo "PRIMARY_LABEL=\"Primary\"" >> /etc/darkflows/d_network.cfg
echo "" >> /etc/darkflows/d_network.cfg
echo "# Secondary Interface Settings" >> /etc/darkflows/d_network.cfg
echo "SECONDARY_INTERFACE=\"$SECONDARY_INTERFACE\"" >> /etc/darkflows/d_network.cfg
echo "SECONDARY_EGRESS_BANDWIDTH=\"20mbit\"" >> /etc/darkflows/d_network.cfg
echo "SECONDARY_INGRESS_BANDWIDTH=\"500mbit\"" >> /etc/darkflows/d_network.cfg
echo "SECONDARY_LABEL=\"Secondary\"" >> /etc/darkflows/d_network.cfg
echo "" >> /etc/darkflows/d_network.cfg
echo "# Internal Interface Settings" >> /etc/darkflows/d_network.cfg
echo "INTERNAL_INTERFACE=\"$INTERNAL_INTERFACE\"" >> /etc/darkflows/d_network.cfg
echo "INTERNAL_EGRESS_BANDWIDTH=\"2.5gbit\"" >> /etc/darkflows/d_network.cfg
echo "INTERNAL_INGRESS_BANDWIDTH=\"2.5gbit\"" >> /etc/darkflows/d_network.cfg
echo "INTERNAL_LABEL=\"Internal\"" >> /etc/darkflows/d_network.cfg

echo "Configuration file /etc/darkflows/d_network.cfg created successfully."

