(()=>{var e={};e.id=659,e.ids=[659],e.modules={10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},79646:e=>{"use strict";e.exports=require("child_process")},28354:e=>{"use strict";e.exports=require("util")},92344:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>v,routeModule:()=>d,serverHooks:()=>g,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>y});var s={};r.r(s),r.d(s,{GET:()=>p,dynamic:()=>c,runtime:()=>u});var n=r(42706),a=r(28203),o=r(45994),l=r(79646);let i=(0,r(28354).promisify)(l.exec),c="force-dynamic",u="nodejs";async function p(e){let t=new TextEncoder,r=null,s=!0,n=0;try{let{stdout:e}=await i("free -m");for(let t of e.trim().split("\n"))if(t.startsWith("Mem:")){let e=t.split(/\s+/);n=parseInt(e[1],10);break}}catch(e){console.error("Error getting total memory:",e)}return new Response(new ReadableStream({start:async a=>{try{e.signal.addEventListener("abort",()=>{console.log("Client disconnected from sys-stats, cleaning up"),s=!1,r&&(clearInterval(r),r=null),a.close()}),r=setInterval(async()=>{if(!s){r&&(clearInterval(r),r=null);return}try{let{stdout:e}=await i("free -m"),o=e.trim().split("\n"),l=0;for(let e of o)if(e.startsWith("Mem:")){let t=e.split(/\s+/);l=parseInt(t[6],10);break}let{stdout:c}=await i("vmstat 1 2"),u=c.trim().split("\n"),p=u[u.length-1].trim().split(/\s+/),d=parseInt(p[14],10),m=n>0?l/n*100:0,y={timestamp:new Date().toLocaleTimeString(),cpu:100-d,memFree:l,totalMemMB:n,percentFree:m};if(s)try{a.enqueue(t.encode(`data: ${JSON.stringify(y)}

`)),Date.now()%3e4<1e3&&a.enqueue(t.encode("event: heartbeat\ndata: {}\n\n"))}catch(e){console.log("Stream closed, stopping sys-stats collection:",e),s=!1,r&&(clearInterval(r),r=null)}}catch(e){if(console.error("Error collecting system stats:",e),s)try{a.enqueue(t.encode(`event: error
data: ${JSON.stringify({error:String(e)})}

`))}catch(e){console.log("Stream closed during error handling:",e),s=!1,r&&(clearInterval(r),r=null)}}},1e3)}catch(e){console.error("Stream setup error:",e),s=!1,r&&(clearInterval(r),r=null),a.error(e)}},cancel:()=>{console.log("System stats stream cancelled"),s=!1,r&&(clearInterval(r),r=null)}}),{headers:{"Content-Type":"text/event-stream","Cache-Control":"no-cache",Connection:"keep-alive"}})}let d=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/sys-stats/route",pathname:"/api/sys-stats",filename:"route",bundlePath:"app/api/sys-stats/route"},resolvedPagePath:"/usr/local/darkflows/src/live-ifstat/app/api/sys-stats/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:m,workUnitAsyncStorage:y,serverHooks:g}=d;function v(){return(0,o.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:y})}},96487:()=>{},78335:()=>{},42706:(e,t,r)=>{"use strict";e.exports=r(44870)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[994],()=>r(92344));module.exports=s})();