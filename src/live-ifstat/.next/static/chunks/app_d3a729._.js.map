{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/components/Sidebar.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport NetworkCheckIcon from '@mui/icons-material/NetworkCheck';\nimport DevicesIcon from '@mui/icons-material/Devices';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport IconButton from '@mui/material/IconButton';\nimport { useRouter } from 'next/navigation';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\n\nconst menuItems = [\n  { text: 'Dashboard', icon: <DashboardIcon />, path: '/' },\n  { text: 'DHCP Leases', icon: <DevicesIcon />, path: '/leases' },\n  { text: 'Reservations', icon: <BookmarkIcon />, path: '/reservations' },\n  { text: 'Network Stats', icon: <NetworkCheckIcon />, path: '/bars' }\n];\n\nexport default function Sidebar() {\n  const [open, setOpen] = React.useState(false);\n  const router = useRouter();\n\n  const toggleDrawer = (newOpen: boolean) => () => {\n    setOpen(newOpen);\n  };\n\n  const handleNavigation = (path: string) => {\n    router.push(path);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <IconButton\n        onClick={toggleDrawer(true)}\n        sx={{ position: 'fixed', top: 16, left: 16, zIndex: 1000 }}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Drawer anchor=\"left\" open={open} onClose={toggleDrawer(false)}>\n        <Box sx={{ width: 250 }} role=\"presentation\">\n          <List>\n            {menuItems.map((item) => (\n              <ListItem key={item.text} disablePadding>\n                <ListItemButton onClick={() => handleNavigation(item.path)}>\n                  <ListItemIcon>{item.icon}</ListItemIcon>\n                  <ListItemText primary={item.text} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n      </Drawer>\n    </>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AAaA;AALA;AAEA;AAIA;AALA;AAGA;AADA;AATA;AADA;AAEA;AACA;AACA;AACA;AACA;;;AATA;;;;;;;;;;;;;;;;AAkBA,MAAM,YAAY;IAChB;QAAE,MAAM;QAAa,oBAAM,6LAAC,iKAAA,CAAA,UAAa;;;;;QAAK,MAAM;IAAI;IACxD;QAAE,MAAM;QAAe,oBAAM,6LAAC,+JAAA,CAAA,UAAW;;;;;QAAK,MAAM;IAAU;IAC9D;QAAE,MAAM;QAAgB,oBAAM,6LAAC,gKAAA,CAAA,UAAY;;;;;QAAK,MAAM;IAAgB;IACtE;QAAE,MAAM;QAAiB,oBAAM,6LAAC,oKAAA,CAAA,UAAgB;;;;;QAAK,MAAM;IAAQ;CACpE;AAEc,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,8JAAM,QAAQ,CAAC;IACvC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,CAAC,UAAqB;YACzC,QAAQ;QACV;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAO,IAAI,CAAC;QACZ,QAAQ;IACV;IAEA,qBACE;;0BACE,6LAAC,gKAAA,CAAA,UAAU;gBACT,SAAS,aAAa;gBACtB,IAAI;oBAAE,UAAU;oBAAS,KAAK;oBAAI,MAAM;oBAAI,QAAQ;gBAAK;0BAEzD,cAAA,6LAAC,4JAAA,CAAA,UAAQ;;;;;;;;;;0BAEX,6LAAC,wJAAA,CAAA,UAAM;gBAAC,QAAO;gBAAO,MAAM;gBAAM,SAAS,aAAa;0BACtD,cAAA,6LAAC,kJAAA,CAAA,UAAG;oBAAC,IAAI;wBAAE,OAAO;oBAAI;oBAAG,MAAK;8BAC5B,cAAA,6LAAC,oJAAA,CAAA,UAAI;kCACF,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC,4JAAA,CAAA,UAAQ;gCAAiB,cAAc;0CACtC,cAAA,6LAAC,wKAAA,CAAA,UAAc;oCAAC,SAAS,IAAM,iBAAiB,KAAK,IAAI;;sDACvD,6LAAC,oKAAA,CAAA,UAAY;sDAAE,KAAK,IAAI;;;;;;sDACxB,6LAAC,oKAAA,CAAA,UAAY;4CAAC,SAAS,KAAK,IAAI;;;;;;;;;;;;+BAHrB,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;AAYtC;GArCwB;;QAEP,qIAAA,CAAA,YAAS;;;KAFF"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}