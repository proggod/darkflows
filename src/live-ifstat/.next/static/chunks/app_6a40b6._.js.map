{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/contexts/NetworkDataContext.tsx"],"sourcesContent":["'use client'\n\nimport { createContext, useContext, useEffect, useState, ReactNode } from 'react'\n\ninterface IfstatData {\n  timestamp: string\n  kbIn: number\n  kbOut: number\n  device: string\n}\n\ninterface NetworkData {\n  [device: string]: IfstatData[]\n}\n\ninterface NetworkDataContextType {\n  data: NetworkData\n  connectionStatus: 'connecting' | 'connected' | 'error'\n  lastError: string | null\n}\n\nconst NetworkDataContext = createContext<NetworkDataContextType>({\n  data: {},\n  connectionStatus: 'connecting',\n  lastError: null\n})\n\nconst MAX_DATA_POINTS = 60\n\nexport function NetworkDataProvider({ children }: { children: ReactNode }) {\n  const [data, setData] = useState<NetworkData>({})\n  const [connectionStatus, setConnectionStatus] = useState<'connecting' | 'connected' | 'error'>('connecting')\n  const [lastError, setLastError] = useState<string | null>(null)\n\n  useEffect(() => {\n    const url = '/api/ifstat-stream'\n    console.log('Creating shared EventSource connection to:', url)\n    setConnectionStatus('connecting')\n\n    const es = new EventSource(url)\n\n    es.onopen = () => {\n      console.log('Shared EventSource connection opened')\n      setConnectionStatus('connected')\n      setLastError(null)\n    }\n\n    es.onmessage = (e) => {\n      try {\n        // Ignore heartbeat messages\n        if (e.type === 'heartbeat') {\n          console.log('Received heartbeat')\n          return\n        }\n\n        console.log('Received message:', e.data)\n        const newData = JSON.parse(e.data) as IfstatData\n        console.log('Parsed data:', newData)\n\n        if (!newData.device || typeof newData.kbIn !== 'number' || typeof newData.kbOut !== 'number') {\n          console.error('Invalid data format:', newData)\n          return\n        }\n\n        const device = newData.device\n\n        setData(prev => {\n          console.log('Current data for', device, ':', prev[device]?.length || 0, 'points')\n          const deviceData = prev[device] || []\n          const updated = [...deviceData, newData]\n          if (updated.length > MAX_DATA_POINTS) {\n            updated.shift()\n          }\n          console.log('Updated data for', device, ':', updated.length, 'points')\n          return {\n            ...prev,\n            [device]: updated\n          }\n        })\n      } catch (err) {\n        const error = err as Error\n        console.error('Error parsing SSE data:', error)\n        setLastError(`Error parsing data: ${error.message}`)\n      }\n    }\n\n    es.onerror = (err) => {\n      console.error('Shared SSE error:', err)\n      setConnectionStatus('error')\n      setLastError('Connection error occurred')\n      \n      // Attempt to reconnect after a delay\n      setTimeout(() => {\n        console.log('Attempting to reconnect...')\n        if (es.readyState === EventSource.CLOSED) {\n          window.location.reload()\n        }\n      }, 5000)\n    }\n\n    return () => {\n      console.log('Cleaning up shared EventSource connection')\n      es.close()\n    }\n  }, [])\n\n  // Debug output whenever data changes\n  useEffect(() => {\n    console.log('Network data updated:', Object.keys(data).map(device => ({\n      device,\n      points: data[device].length\n    })))\n  }, [data])\n\n  return (\n    <NetworkDataContext.Provider value={{ data, connectionStatus, lastError }}>\n      {children}\n    </NetworkDataContext.Provider>\n  )\n}\n\nexport function useNetworkData(device: string) {\n  const context = useContext(NetworkDataContext)\n  if (!context) {\n    throw new Error('useNetworkData must be used within a NetworkDataProvider')\n  }\n\n  // Debug output whenever component requests data\n  console.log(`[${device}] Requesting data:`, {\n    available: context.data[device]?.length || 0,\n    status: context.connectionStatus,\n    error: context.lastError\n  })\n\n  return {\n    data: context.data[device] || [],\n    connectionStatus: context.connectionStatus,\n    lastError: context.lastError\n  }\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/components/Modal.tsx"],"sourcesContent":["'use client'\n\ninterface ModalProps {\n  isOpen: boolean\n  onClose: () => void\n  children: React.ReactNode\n  title?: string\n}\n\nexport default function Modal({ isOpen, onClose, children, title }: ModalProps) {\n  if (!isOpen) return null\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      <div className=\"fixed inset-0 bg-black opacity-50\" onClick={onClose}></div>\n      <div className=\"relative bg-white rounded-lg w-[90vw] h-[90vh] p-6 z-50\">\n        <div className=\"flex justify-between items-center mb-4\">\n          {title && <h2 className=\"text-xl font-semibold\">{title}</h2>}\n          <button\n            onClick={onClose}\n            className=\"text-gray-500 hover:text-gray-700\"\n          >\n            âœ•\n          </button>\n        </div>\n        <div className=\"h-[calc(90vh-100px)] overflow-auto\">\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAAA;;AASe,SAAS,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAc;IAC5E,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;gBAAoC,SAAS;;;;;;0BAC5D,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;4BACZ,uBAAS,6LAAC;gCAAG,WAAU;0CAAyB;;;;;;0CACjD,6LAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;kCAIH,6LAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;;;;;;;AAKX;KAtBwB"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/components/DeviceChart.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { Line, Bar } from 'react-chartjs-2'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js'\nimport { useNetworkData } from '../contexts/NetworkDataContext'\nimport Modal from './Modal'\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend)\n\ninterface DeviceChartProps {\n  device: string\n  label?: string\n  type?: 'primary' | 'secondary' | 'internal'\n  egressBandwidth?: string\n  ingressBandwidth?: string\n  className?: string\n  isModal?: boolean\n}\n\nconst maxDataPoints = 60\n\nexport default function DeviceChart({ device, label, className = '', isModal = false }: DeviceChartProps) {\n  const chartTypeKey = `chartType_${device}`\n  const dataTypeKey = `dataType_${device}`\n  \n  const initialChartType = (typeof window !== 'undefined' && localStorage.getItem(chartTypeKey)) || 'line'\n  const initialDataType = (typeof window !== 'undefined' && localStorage.getItem(dataTypeKey)) || 'both'\n  \n  const [chartType, setChartType] = useState<'line' | 'bar'>(initialChartType as 'line' | 'bar')\n  const [dataType, setDataType] = useState<'input' | 'output' | 'both'>(initialDataType as 'input' | 'output' | 'both')\n  \n  const { data: dataPoints, connectionStatus, lastError } = useNetworkData(device)\n\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem(chartTypeKey, chartType)\n      localStorage.setItem(dataTypeKey, dataType)\n    }\n  }, [chartType, dataType, chartTypeKey, dataTypeKey])\n\n  // Convert KB/s to Mb/s\n  const mbInData = dataPoints.map((d) => d.kbIn * 0.008)\n  const mbOutData = dataPoints.map((d) => d.kbOut * 0.008)\n  const labels = dataPoints.map((d) => d.timestamp)\n\n  const datasets = []\n  if (dataType === 'input' || dataType === 'both') {\n    datasets.push({\n      label: 'Mb/s In',\n      data: mbInData,\n      backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      fill: chartType === 'line',\n      tension: chartType === 'line' ? 0.3 : 0,\n    })\n  }\n  if (dataType === 'output' || dataType === 'both') {\n    datasets.push({\n      label: 'Mb/s Out',\n      data: mbOutData,\n      backgroundColor: 'rgba(255, 99, 132, 0.6)',\n      borderColor: 'rgba(255, 99, 132, 1)',\n      fill: chartType === 'line',\n      tension: chartType === 'line' ? 0.3 : 0,\n    })\n  }\n\n  const chartData = {\n    labels,\n    datasets,\n  }\n\n  const displayName = label || device\n\n  const chartOptions = {\n    responsive: true,\n    animation: { duration: 0 },\n    scales: {\n      x: { display: true },\n      y: { display: true, beginAtZero: true },\n    },\n    plugins: {\n      legend: { position: 'top' as const },\n      title: { display: true, text: `Live Data for ${displayName}` },\n    },\n  }\n\n  const [showModal, setShowModal] = useState(false)\n\n  const chartContent = (\n    <>\n      {chartType === 'line' ? (\n        <Line data={chartData} options={chartOptions} />\n      ) : (\n        <Bar data={chartData} options={chartOptions} />\n      )}\n    </>\n  )\n\n  if (isModal) {\n    return chartContent\n  }\n\n  return (\n    <>\n      <div \n        className={`bg-white p-4 border rounded shadow cursor-pointer hover:shadow-lg transition-shadow ${className}`}\n        onClick={() => setShowModal(true)}\n      >\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900\">{displayName} Throughput</h2>\n            <div className=\"text-sm text-gray-600\">\n              Status: {connectionStatus} {lastError && `(${lastError})`}\n            </div>\n          </div>\n          <div className=\"flex gap-2\">\n            <select\n              value={dataType}\n              onChange={(e) => setDataType(e.target.value as 'input' | 'output' | 'both')}\n              className=\"border rounded p-1 text-sm text-gray-900\"\n            >\n              <option value=\"both\">Both</option>\n              <option value=\"input\">Input Only</option>\n              <option value=\"output\">Output Only</option>\n            </select>\n            <select\n              value={chartType}\n              onChange={(e) => setChartType(e.target.value as 'line' | 'bar')}\n              className=\"border rounded p-1 text-sm text-gray-900\"\n            >\n              <option value=\"line\">Line</option>\n              <option value=\"bar\">Bar</option>\n            </select>\n          </div>\n        </div>\n\n        {chartContent}\n\n        <div className=\"text-sm mt-2 text-gray-800\">\n          <p>Last {maxDataPoints} samples in Mb/s</p>\n          <p>Current data points: {dataPoints.length}</p>\n        </div>\n      </div>\n\n      <Modal\n        isOpen={showModal}\n        onClose={() => setShowModal(false)}\n        title={`${displayName} Throughput`}\n      >\n        <DeviceChart\n          device={device}\n          label={label}\n          isModal={true}\n          className=\"h-full\"\n        />\n      </Modal>\n    </>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAEA;AAaA;AACA;AAZA;AADA;;;AAHA;;;;;;AAkBA,+JAAA,CAAA,QAAO,CAAC,QAAQ,CAAC,+JAAA,CAAA,gBAAa,EAAE,+JAAA,CAAA,cAAW,EAAE,+JAAA,CAAA,eAAY,EAAE,+JAAA,CAAA,cAAW,EAAE,+JAAA,CAAA,aAAU,EAAE,+JAAA,CAAA,QAAK,EAAE,+JAAA,CAAA,UAAO,EAAE,+JAAA,CAAA,SAAM;AAY1G,MAAM,gBAAgB;AAEP,SAAS,YAAY,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,UAAU,KAAK,EAAoB;;IACtG,MAAM,eAAe,CAAC,UAAU,EAAE,QAAQ;IAC1C,MAAM,cAAc,CAAC,SAAS,EAAE,QAAQ;IAExC,MAAM,mBAAmB,AAAC,aAAkB,eAAe,aAAa,OAAO,CAAC,iBAAkB;IAClG,MAAM,kBAAkB,AAAC,aAAkB,eAAe,aAAa,OAAO,CAAC,gBAAiB;IAEhG,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAC3D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA+B;IAEtE,MAAM,EAAE,MAAM,UAAU,EAAE,gBAAgB,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,yIAAA,CAAA,iBAAc,AAAD,EAAE;IAEzE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,wCAAmC;gBACjC,aAAa,OAAO,CAAC,cAAc;gBACnC,aAAa,OAAO,CAAC,aAAa;YACpC;QACF;gCAAG;QAAC;QAAW;QAAU;QAAc;KAAY;IAEnD,uBAAuB;IACvB,MAAM,WAAW,WAAW,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,GAAG;IAChD,MAAM,YAAY,WAAW,GAAG,CAAC,CAAC,IAAM,EAAE,KAAK,GAAG;IAClD,MAAM,SAAS,WAAW,GAAG,CAAC,CAAC,IAAM,EAAE,SAAS;IAEhD,MAAM,WAAW,EAAE;IACnB,IAAI,aAAa,WAAW,aAAa,QAAQ;QAC/C,SAAS,IAAI,CAAC;YACZ,OAAO;YACP,MAAM;YACN,iBAAiB;YACjB,aAAa;YACb,MAAM,cAAc;YACpB,SAAS,cAAc,SAAS,MAAM;QACxC;IACF;IACA,IAAI,aAAa,YAAY,aAAa,QAAQ;QAChD,SAAS,IAAI,CAAC;YACZ,OAAO;YACP,MAAM;YACN,iBAAiB;YACjB,aAAa;YACb,MAAM,cAAc;YACpB,SAAS,cAAc,SAAS,MAAM;QACxC;IACF;IAEA,MAAM,YAAY;QAChB;QACA;IACF;IAEA,MAAM,cAAc,SAAS;IAE7B,MAAM,eAAe;QACnB,YAAY;QACZ,WAAW;YAAE,UAAU;QAAE;QACzB,QAAQ;YACN,GAAG;gBAAE,SAAS;YAAK;YACnB,GAAG;gBAAE,SAAS;gBAAM,aAAa;YAAK;QACxC;QACA,SAAS;YACP,QAAQ;gBAAE,UAAU;YAAe;YACnC,OAAO;gBAAE,SAAS;gBAAM,MAAM,CAAC,cAAc,EAAE,aAAa;YAAC;QAC/D;IACF;IAEA,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,MAAM,6BACJ;kBACG,cAAc,uBACb,6LAAC,yJAAA,CAAA,OAAI;YAAC,MAAM;YAAW,SAAS;;;;;iCAEhC,6LAAC,yJAAA,CAAA,MAAG;YAAC,MAAM;YAAW,SAAS;;;;;;;IAKrC,IAAI,SAAS;QACX,OAAO;IACT;IAEA,qBACE;;0BACE,6LAAC;gBACC,WAAW,CAAC,oFAAoF,EAAE,WAAW;gBAC7G,SAAS,IAAM,aAAa;;kCAE5B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;;4CAAuC;4CAAY;;;;;;;kDACjE,6LAAC;wCAAI,WAAU;;4CAAwB;4CAC5B;4CAAiB;4CAAE,aAAa,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;;;;;;;;;;;;;0CAG7D,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;wCAC3C,WAAU;;0DAEV,6LAAC;gDAAO,OAAM;0DAAO;;;;;;0DACrB,6LAAC;gDAAO,OAAM;0DAAQ;;;;;;0DACtB,6LAAC;gDAAO,OAAM;0DAAS;;;;;;;;;;;;kDAEzB,6LAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;wCAC5C,WAAU;;0DAEV,6LAAC;gDAAO,OAAM;0DAAO;;;;;;0DACrB,6LAAC;gDAAO,OAAM;0DAAM;;;;;;;;;;;;;;;;;;;;;;;;oBAKzB;kCAED,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;oCAAE;oCAAM;oCAAc;;;;;;;0CACvB,6LAAC;;oCAAE;oCAAsB,WAAW,MAAM;;;;;;;;;;;;;;;;;;;0BAI9C,6LAAC,8HAAA,CAAA,UAAK;gBACJ,QAAQ;gBACR,SAAS,IAAM,aAAa;gBAC5B,OAAO,GAAG,YAAY,WAAW,CAAC;0BAElC,cAAA,6LAAC;oBACC,QAAQ;oBACR,OAAO;oBACP,SAAS;oBACT,WAAU;;;;;;;;;;;;;AAKpB;GA1IwB;;QAUoC,yIAAA,CAAA,iBAAc;;;KAVlD"}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 555, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/components/SysChart.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { Line, Bar } from 'react-chartjs-2'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js'\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend)\n\ninterface SysData {\n  timestamp: string\n  cpu: number\n  memFree: number\n  totalMemMB: number\n  percentFree: number\n}\n\ninterface SysChartProps {\n  metric: 'cpu' | 'mem'\n}\n\nconst maxDataPoints = 60\n\nexport default function SysChart({ metric }: SysChartProps) {\n  const [dataPoints, setDataPoints] = useState<SysData[]>([])\n\n  // Local storage for chart type preference\n  const storageKey = `chartType_${metric}`\n  const initialChartType = (typeof window !== 'undefined' && localStorage.getItem(storageKey)) || 'line'\n  const [chartType, setChartType] = useState<'line' | 'bar'>(initialChartType as 'line' | 'bar')\n\n  useEffect(() => {\n    const es = new EventSource(`/api/sys-stats`)\n    es.onmessage = (e) => {\n      try {\n        const newData: SysData = JSON.parse(e.data)\n        setDataPoints((prev) => {\n          const updated = [...prev, newData]\n          if (updated.length > maxDataPoints) {\n            updated.shift()\n          }\n          return updated\n        })\n      } catch (err) {\n        console.error('Error parsing SSE data for sys-stats:', err)\n      }\n    }\n\n    es.onerror = (err) => {\n      console.error('SSE error for sys-stats:', err)\n      es.close()\n    }\n\n    return () => {\n      es.close()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem(storageKey, chartType)\n    }\n  }, [chartType, storageKey])\n\n  const labels = dataPoints.map((d) => d.timestamp)\n\n  if (metric === 'cpu') {\n    // CPU chart\n    const cpuData = dataPoints.map((d) => d.cpu)\n    const latestCpu = dataPoints.length > 0 ? dataPoints[dataPoints.length - 1].cpu : 0\n    const chartData = {\n      labels,\n      datasets: [\n        {\n          label: 'CPU Load (%)',\n          data: cpuData,\n          backgroundColor: 'rgba(75, 192, 192, 0.6)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          fill: chartType === 'line',\n          tension: chartType === 'line' ? 0.3 : 0\n        },\n      ],\n    }\n\n    const chartOptions = {\n      responsive: true,\n      animation: { duration: 0 },\n      scales: {\n        x: { display: true },\n        y: { display: true, beginAtZero: true },\n      },\n      plugins: {\n        legend: { position: 'top' as const },\n        title: {\n          display: true,\n          text: 'CPU Load'\n        },\n      },\n    }\n\n    return (\n      <div className=\"bg-white p-4 border rounded shadow\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">\n            CPU Load: {latestCpu.toFixed(1)}%\n          </h2>\n          <select\n            value={chartType}\n            onChange={(e) => setChartType(e.target.value as 'line' | 'bar')}\n            className=\"border rounded p-1 text-sm text-gray-900\"\n          >\n            <option value=\"line\">Line</option>\n            <option value=\"bar\">Bar</option>\n          </select>\n        </div>\n        {chartType === 'line' ? (\n          <Line data={chartData} options={chartOptions} />\n        ) : (\n          <Bar data={chartData} options={chartOptions} />\n        )}\n        <p className=\"text-sm mt-2 text-gray-800\">Last {maxDataPoints} samples</p>\n      </div>\n    )\n\n  } else {\n    // Memory chart\n    const memFreeData = dataPoints.map((d) => d.memFree)\n    const percentFreeData = dataPoints.map((d) => d.percentFree)\n    const latest = dataPoints[dataPoints.length - 1]\n    const totalMemMB = latest ? latest.totalMemMB : 0\n    const latestPercentFree = latest ? latest.percentFree : 0\n    const latestMemFree = latest ? latest.memFree : 0\n\n    const chartData = {\n      labels,\n      datasets: [\n        {\n          label: 'Free Memory (MB)',\n          data: memFreeData,\n          backgroundColor: 'rgba(54, 162, 235, 0.6)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          yAxisID: 'yMemory',\n          fill: chartType === 'line',\n          tension: chartType === 'line' ? 0.3 : 0\n        },\n        {\n          label: 'Percent Free (%)',\n          data: percentFreeData,\n          backgroundColor: 'rgba(255, 206, 86, 0.6)',\n          borderColor: 'rgba(255, 206, 86, 1)',\n          yAxisID: 'yPercent',\n          fill: chartType === 'line',\n          tension: chartType === 'line' ? 0.3 : 0\n        },\n      ],\n    }\n\n    const chartOptions = {\n      responsive: true,\n      animation: { duration: 0 },\n      scales: {\n        x: { display: true },\n        yMemory: { \n          display: true, \n          beginAtZero: true, \n          type: 'linear', \n          position: 'left' \n        },\n        yPercent: {\n          display: true,\n          beginAtZero: true,\n          type: 'linear',\n          position: 'right',\n          grid: {\n            drawOnChartArea: false\n          }\n        },\n      },\n      plugins: {\n        legend: { position: 'top' as const },\n        title: {\n          display: true,\n          text: `Free Memory / % Free (Total: ${totalMemMB} MB)`\n        },\n      },\n    }\n\n    return (\n      <div className=\"bg-white p-4 border rounded shadow\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900\">Memory Usage</h2>\n            <div className=\"text-sm text-gray-600\">\n              Free: {latestMemFree.toFixed(0)} MB ({latestPercentFree.toFixed(1)}%)\n            </div>\n          </div>\n          <select\n            value={chartType}\n            onChange={(e) => setChartType(e.target.value as 'line' | 'bar')}\n            className=\"border rounded p-1 text-sm text-gray-900\"\n          >\n            <option value=\"line\">Line</option>\n            <option value=\"bar\">Bar</option>\n          </select>\n        </div>\n        {chartType === 'line' ? (\n          <Line data={chartData} options={{...chartOptions, scales: {\n            x: { display: true },\n            y: { \n              display: true, \n              beginAtZero: true, \n              type: 'linear' as const, \n              position: 'left' \n            },\n            y2: {\n              display: true,\n              beginAtZero: true,\n              type: 'linear' as const,\n              position: 'right',\n              grid: {\n                drawOnChartArea: false\n              }\n            },\n          }}} />\n        ) : (\n          <Bar data={chartData} options={{...chartOptions, scales: {\n            x: { display: true },\n            y: { \n              display: true, \n              beginAtZero: true, \n              type: 'linear' as const, \n              position: 'left' \n            },\n            y2: {\n              display: true,\n              beginAtZero: true,\n              type: 'linear' as const,\n              position: 'right',\n              grid: {\n                drawOnChartArea: false\n              }\n            },\n          }}} />\n        )}\n        <p className=\"text-sm mt-2 text-gray-800\">\n          Last {maxDataPoints} samples\n        </p>\n      </div>\n    )\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 971, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 977, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/components/ServerInfo.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\n\ninterface NetworkInterface {\n  name: string\n  speed?: string\n}\n\ninterface ServerInfoData {\n  totalMemMB: number\n  cpus: number\n  cpuModel: string\n  osName: string\n  osVersion: string\n  interfaces: NetworkInterface[]\n}\n\nexport default function ServerInfo() {\n  const [info, setInfo] = useState<ServerInfoData | null>(null)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    fetch('/api/server-info')\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          setError(data.error)\n        } else {\n          setInfo(data)\n        }\n      })\n      .catch(() => setError('Failed to load server info'))\n  }, [])\n\n  if (error) {\n    return <div className=\"text-red-600\">Error: {error}</div>\n  }\n\n  if (!info) {\n    return <div className=\"text-gray-700\">Loading server info...</div>\n  }\n\n  return (\n    <div className=\"bg-white p-4 border rounded shadow text-gray-900\">\n      <h2 className=\"text-lg font-semibold mb-4\">Server Information</h2>\n      <div className=\"mb-2\"><strong>OS:</strong> {info.osName} {info.osVersion}</div>\n      <div className=\"mb-2\"><strong>CPU:</strong> {info.cpuModel} ({info.cpus} cores)</div>\n      <div className=\"mb-2\"><strong>Total Memory:</strong> {info.totalMemMB} MB</div>\n      <h3 className=\"font-semibold mt-4 mb-2\">Network Interfaces:</h3>\n      <ul className=\"list-disc list-inside\">\n        {info.interfaces.map((iface) => (\n          <li key={iface.name}>\n            {iface.name} - {iface.speed || 'Unknown speed'}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAkBe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAyB;IACxD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,MAAM,oBACH,IAAI;wCAAC,CAAA,MAAO,IAAI,IAAI;uCACpB,IAAI;wCAAC,CAAA;oBACJ,IAAI,KAAK,KAAK,EAAE;wBACd,SAAS,KAAK,KAAK;oBACrB,OAAO;wBACL,QAAQ;oBACV;gBACF;uCACC,KAAK;wCAAC,IAAM,SAAS;;QAC1B;+BAAG,EAAE;IAEL,IAAI,OAAO;QACT,qBAAO,6LAAC;YAAI,WAAU;;gBAAe;gBAAQ;;;;;;;IAC/C;IAEA,IAAI,CAAC,MAAM;QACT,qBAAO,6LAAC;YAAI,WAAU;sBAAgB;;;;;;IACxC;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA6B;;;;;;0BAC3C,6LAAC;gBAAI,WAAU;;kCAAO,6LAAC;kCAAO;;;;;;oBAAY;oBAAE,KAAK,MAAM;oBAAC;oBAAE,KAAK,SAAS;;;;;;;0BACxE,6LAAC;gBAAI,WAAU;;kCAAO,6LAAC;kCAAO;;;;;;oBAAa;oBAAE,KAAK,QAAQ;oBAAC;oBAAG,KAAK,IAAI;oBAAC;;;;;;;0BACxE,6LAAC;gBAAI,WAAU;;kCAAO,6LAAC;kCAAO;;;;;;oBAAsB;oBAAE,KAAK,UAAU;oBAAC;;;;;;;0BACtE,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,6LAAC;gBAAG,WAAU;0BACX,KAAK,UAAU,CAAC,GAAG,CAAC,CAAC,sBACpB,6LAAC;;4BACE,MAAM,IAAI;4BAAC;4BAAI,MAAM,KAAK,IAAI;;uBADxB,MAAM,IAAI;;;;;;;;;;;;;;;;AAO7B;GAzCwB;KAAA"}},
    {"offset": {"line": 1141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1147, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/components/StatusBox.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\n\ninterface InterfaceStatus {\n  new_drops: number\n  backlog: number\n  memory: number\n}\n\ninterface StatusData {\n  timestamp: string\n  interfaces: {\n    [key: string]: InterfaceStatus\n  }\n}\n\ninterface NetworkDevice {\n  name: string\n  type?: 'primary' | 'secondary' | 'internal'\n  label?: string\n}\n\nexport default function StatusBox() {\n  const [status, setStatus] = useState<StatusData | null>(null)\n  const [error, setError] = useState<string | null>(null)\n  const [deviceLabels, setDeviceLabels] = useState<Record<string, string>>({})\n\n  useEffect(() => {\n    // Fetch device config first\n    const fetchDeviceLabels = async () => {\n      try {\n        const response = await fetch('/api/devices')\n        const data = await response.json()\n        const labels: Record<string, string> = {}\n        \n        // Process devices and create label mapping\n        data.devices.forEach((device: NetworkDevice) => {\n          labels[device.name] = device.label || device.name\n        })\n        \n        // Add special case for ifb0\n        labels['ifb0'] = 'InBound'\n        \n        setDeviceLabels(labels)\n      } catch (error) {\n        console.error('Failed to fetch device labels:', error)\n      }\n    }\n\n    fetchDeviceLabels()\n  }, [])\n\n  useEffect(() => {\n    const fetchStatus = async () => {\n      try {\n        const response = await fetch('/api/status')\n        const data = await response.json()\n        if (data.error) {\n          setError(data.error)\n        } else {\n          setStatus(data)\n        }\n      } catch (error) {\n        console.error('Failed to fetch status:', error)\n        setError('Failed to fetch status')\n      }\n    }\n\n    // Initial fetch\n    fetchStatus()\n\n    // Set up interval for updates\n    const intervalId = setInterval(fetchStatus, 15000)\n\n    // Cleanup on unmount\n    return () => clearInterval(intervalId)\n  }, [])\n\n  if (error) {\n    return <div className=\"text-red-600\">Error: {error}</div>\n  }\n\n  if (!status) {\n    return <div className=\"text-gray-700\">Loading status...</div>\n  }\n\n  const formatMemory = (bytes: number) => (bytes / (1024 * 1024)).toFixed(2)\n\n  return (\n    <div className=\"p-0 pt-2\">\n      <div className=\"flex justify-between items-center mb-2\">\n        <h2 className=\"text-sm font-semibold text-gray-900\">CAKE Statistics</h2>\n        <div className=\"text-xs text-gray-600\">\n          {new Date(status.timestamp).toLocaleTimeString()}\n        </div>\n      </div>\n      \n      <div className=\"space-y-2\">\n        {Object.entries(status.interfaces).map(([iface, stats]) => (\n          <div key={iface} >\n            <div className=\"text-xs font-medium text-gray-800\">\n              {deviceLabels[iface] || iface}\n            </div>\n            <div className=\"grid grid-cols-3  mt-0.5 text-s\">\n              <div>\n                <span className={`${stats.new_drops > 0 ? 'text-red-600' : 'text-gray-900'}`}>\n                  {stats.new_drops.toLocaleString()} drops\n                </span>\n              </div>\n              <div>\n                <span className={`${stats.backlog > 0 ? 'text-yellow-600' : 'text-gray-900'}`}>\n                  {stats.backlog.toLocaleString()} backlog\n                </span>\n              </div>\n              <div>\n                <span className=\"text-gray-900\">{formatMemory(stats.memory)}MB</span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAuBe,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB;IACxD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B,CAAC;IAE1E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,4BAA4B;YAC5B,MAAM;yDAAoB;oBACxB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,MAAM,SAAiC,CAAC;wBAExC,2CAA2C;wBAC3C,KAAK,OAAO,CAAC,OAAO;qEAAC,CAAC;gCACpB,MAAM,CAAC,OAAO,IAAI,CAAC,GAAG,OAAO,KAAK,IAAI,OAAO,IAAI;4BACnD;;wBAEA,4BAA4B;wBAC5B,MAAM,CAAC,OAAO,GAAG;wBAEjB,gBAAgB;oBAClB,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,kCAAkC;oBAClD;gBACF;;YAEA;QACF;8BAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM;mDAAc;oBAClB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,IAAI,KAAK,KAAK,EAAE;4BACd,SAAS,KAAK,KAAK;wBACrB,OAAO;4BACL,UAAU;wBACZ;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,2BAA2B;wBACzC,SAAS;oBACX;gBACF;;YAEA,gBAAgB;YAChB;YAEA,8BAA8B;YAC9B,MAAM,aAAa,YAAY,aAAa;YAE5C,qBAAqB;YACrB;uCAAO,IAAM,cAAc;;QAC7B;8BAAG,EAAE;IAEL,IAAI,OAAO;QACT,qBAAO,6LAAC;YAAI,WAAU;;gBAAe;gBAAQ;;;;;;;IAC/C;IAEA,IAAI,CAAC,QAAQ;QACX,qBAAO,6LAAC;YAAI,WAAU;sBAAgB;;;;;;IACxC;IAEA,MAAM,eAAe,CAAC,QAAkB,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,EAAE,OAAO,CAAC;IAExE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAsC;;;;;;kCACpD,6LAAC;wBAAI,WAAU;kCACZ,IAAI,KAAK,OAAO,SAAS,EAAE,kBAAkB;;;;;;;;;;;;0BAIlD,6LAAC;gBAAI,WAAU;0BACZ,OAAO,OAAO,CAAC,OAAO,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC,OAAO,MAAM,iBACpD,6LAAC;;0CACC,6LAAC;gCAAI,WAAU;0CACZ,YAAY,CAAC,MAAM,IAAI;;;;;;0CAE1B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;kDACC,cAAA,6LAAC;4CAAK,WAAW,GAAG,MAAM,SAAS,GAAG,IAAI,iBAAiB,iBAAiB;;gDACzE,MAAM,SAAS,CAAC,cAAc;gDAAG;;;;;;;;;;;;kDAGtC,6LAAC;kDACC,cAAA,6LAAC;4CAAK,WAAW,GAAG,MAAM,OAAO,GAAG,IAAI,oBAAoB,iBAAiB;;gDAC1E,MAAM,OAAO,CAAC,cAAc;gDAAG;;;;;;;;;;;;kDAGpC,6LAAC;kDACC,cAAA,6LAAC;4CAAK,WAAU;;gDAAiB,aAAa,MAAM,MAAM;gDAAE;;;;;;;;;;;;;;;;;;;uBAhBxD;;;;;;;;;;;;;;;;AAwBpB;GArGwB;KAAA"}},
    {"offset": {"line": 1364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1370, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/components/PingChart.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2'\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js'\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n)\n\ninterface PingData {\n  ping_delay_ms: number\n  rolling_avg_ms: number\n  packet_loss: boolean\n  highest_ping: number\n  lowest_ping: number\n  samples: string\n}\n\ninterface PingStatus {\n  timestamp: string\n  servers: {\n    [key: string]: PingData\n  }\n}\n\nexport default function PingChart() {\n  const [pingData, setPingData] = useState<PingStatus | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/ping-status')\n        const data = await response.json()\n        setPingData(data)\n      } catch (err) {\n        console.error('Failed to fetch ping data:', err)\n      }\n    }\n\n    fetchData()\n    const interval = setInterval(fetchData, 5000)\n    return () => clearInterval(interval)\n  }, [])\n\n  if (!pingData) return null\n\n  const chartData = {\n    labels: Array.from({ length: 22 }, (_, i) => i + 1),\n    datasets: Object.entries(pingData.servers).map(([server, data]) => ({\n      label: server,\n      data: JSON.parse(data.samples),\n      borderColor: server === 'PRIMARY' ? 'rgb(75, 192, 192)' : 'rgb(255, 99, 132)',\n      backgroundColor: server === 'PRIMARY' ? 'rgba(75, 192, 192, 0.5)' : 'rgba(255, 99, 132, 0.5)',\n      tension: 0.3,\n    })),\n  }\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: 'Connection Ping Times',\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Ping (ms)',\n        },\n      },\n    },\n  }\n\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow\">\n      <Line data={chartData} options={options} />\n    </div>\n  )\n} \n"],"names":[],"mappings":";;;;AAEA;AAEA;AADA;;;AAHA;;;;AAeA,+JAAA,CAAA,QAAO,CAAC,QAAQ,CACd,+JAAA,CAAA,gBAAa,EACb,+JAAA,CAAA,cAAW,EACX,+JAAA,CAAA,eAAY,EACZ,+JAAA,CAAA,cAAW,EACX,+JAAA,CAAA,QAAK,EACL,+JAAA,CAAA,UAAO,EACP,+JAAA,CAAA,SAAM;AAmBO,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB;IAE5D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM;iDAAY;oBAChB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,YAAY;oBACd,EAAE,OAAO,KAAK;wBACZ,QAAQ,KAAK,CAAC,8BAA8B;oBAC9C;gBACF;;YAEA;YACA,MAAM,WAAW,YAAY,WAAW;YACxC;uCAAO,IAAM,cAAc;;QAC7B;8BAAG,EAAE;IAEL,IAAI,CAAC,UAAU,OAAO;IAEtB,MAAM,YAAY;QAChB,QAAQ,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAG,GAAG,CAAC,GAAG,IAAM,IAAI;QACjD,UAAU,OAAO,OAAO,CAAC,SAAS,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,KAAK,GAAK,CAAC;gBAClE,OAAO;gBACP,MAAM,KAAK,KAAK,CAAC,KAAK,OAAO;gBAC7B,aAAa,WAAW,YAAY,sBAAsB;gBAC1D,iBAAiB,WAAW,YAAY,4BAA4B;gBACpE,SAAS;YACX,CAAC;IACH;IAEA,MAAM,UAAU;QACd,YAAY;QACZ,SAAS;YACP,QAAQ;gBACN,UAAU;YACZ;YACA,OAAO;gBACL,SAAS;gBACT,MAAM;YACR;QACF;QACA,QAAQ;YACN,GAAG;gBACD,aAAa;gBACb,OAAO;oBACL,SAAS;oBACT,MAAM;gBACR;YACF;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,yJAAA,CAAA,OAAI;YAAC,MAAM;YAAW,SAAS;;;;;;;;;;;AAGtC;GA3DwB;KAAA"}},
    {"offset": {"line": 1464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1470, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/components/PingStats.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\n\ninterface PingData {\n  ping_delay_ms: number\n  rolling_avg_ms: number\n  packet_loss: boolean\n  highest_ping: number\n  lowest_ping: number\n  samples: string\n}\n\ninterface PingStatus {\n  timestamp: string\n  servers: {\n    [key: string]: PingData\n  }\n}\n\nexport default function PingStats() {\n  const [pingData, setPingData] = useState<PingStatus | null>(null)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/ping-status')\n        const data = await response.json()\n        if (data.error) {\n          setError(data.error)\n        } else {\n          setPingData(data)\n        }\n      } catch (err) {\n        console.error(err)\n        setError('Failed to fetch ping data')\n      }\n    }\n\n    fetchData()\n    const interval = setInterval(fetchData, 5000)\n    return () => clearInterval(interval)\n  }, [])\n\n  if (error) {\n    return <div className=\"text-red-600\">Error: {error}</div>\n  }\n\n  if (!pingData) {\n    return <div className=\"text-gray-700\">Loading ping data...</div>\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      {Object.entries(pingData.servers).map(([server, data]) => (\n        <div key={server} className=\"bg-white p-4 rounded-lg shadow\">\n          <h3 className=\"text-lg font-semibold mb-2 text-gray-900\">{server} Connection Status</h3>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <p className=\"text-sm text-gray-800\">Current Ping</p>\n              <p className=\"text-xl font-bold text-gray-900\">{data.ping_delay_ms}ms</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-800\">Rolling Average</p>\n              <p className=\"text-xl font-bold text-gray-900\">{data.rolling_avg_ms}ms</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-800\">Highest Ping</p>\n              <p className=\"text-xl font-bold text-gray-900\">{data.highest_ping}ms</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-800\">Lowest Ping</p>\n              <p className=\"text-xl font-bold text-gray-900\">{data.lowest_ping}ms</p>\n            </div>\n            <div className=\"col-span-2\">\n              <p className=\"text-sm text-gray-800\">Packet Loss</p>\n              <p className={`font-bold ${data.packet_loss ? 'text-red-600' : 'text-green-600'}`}>\n                {data.packet_loss ? 'Yes' : 'No'}\n              </p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n} \n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAoBe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB;IAC5D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM;iDAAY;oBAChB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,IAAI,KAAK,KAAK,EAAE;4BACd,SAAS,KAAK,KAAK;wBACrB,OAAO;4BACL,YAAY;wBACd;oBACF,EAAE,OAAO,KAAK;wBACZ,QAAQ,KAAK,CAAC;wBACd,SAAS;oBACX;gBACF;;YAEA;YACA,MAAM,WAAW,YAAY,WAAW;YACxC;uCAAO,IAAM,cAAc;;QAC7B;8BAAG,EAAE;IAEL,IAAI,OAAO;QACT,qBAAO,6LAAC;YAAI,WAAU;;gBAAe;gBAAQ;;;;;;;IAC/C;IAEA,IAAI,CAAC,UAAU;QACb,qBAAO,6LAAC;YAAI,WAAU;sBAAgB;;;;;;IACxC;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,OAAO,OAAO,CAAC,SAAS,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,KAAK,iBACnD,6LAAC;gBAAiB,WAAU;;kCAC1B,6LAAC;wBAAG,WAAU;;4BAA4C;4BAAO;;;;;;;kCACjE,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;kDACC,6LAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,6LAAC;wCAAE,WAAU;;4CAAmC,KAAK,aAAa;4CAAC;;;;;;;;;;;;;0CAErE,6LAAC;;kDACC,6LAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,6LAAC;wCAAE,WAAU;;4CAAmC,KAAK,cAAc;4CAAC;;;;;;;;;;;;;0CAEtE,6LAAC;;kDACC,6LAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,6LAAC;wCAAE,WAAU;;4CAAmC,KAAK,YAAY;4CAAC;;;;;;;;;;;;;0CAEpE,6LAAC;;kDACC,6LAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,6LAAC;wCAAE,WAAU;;4CAAmC,KAAK,WAAW;4CAAC;;;;;;;;;;;;;0CAEnE,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,6LAAC;wCAAE,WAAW,CAAC,UAAU,EAAE,KAAK,WAAW,GAAG,iBAAiB,kBAAkB;kDAC9E,KAAK,WAAW,GAAG,QAAQ;;;;;;;;;;;;;;;;;;;eAtB1B;;;;;;;;;;AA8BlB;GAlEwB;KAAA"}},
    {"offset": {"line": 1708, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1714, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/components/SpeedTest.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\n\ninterface SpeedTestResult {\n  download: number\n  upload: number\n  idleLatency: number\n  jitterDown: number\n  jitterUp: number\n  jitterIdle: number\n  packetLoss: number\n  serverName: string\n  isp: string\n  resultUrl: string\n  status: string\n}\n\nexport default function SpeedTest() {\n  const [result, setResult] = useState<SpeedTestResult | null>(null)\n  const [status, setStatus] = useState<string>('idle')\n  const [error, setError] = useState<string | null>(null)\n\n  const runSpeedTest = async () => {\n    try {\n      setStatus('running')\n      setError(null)\n      \n      const eventSource = new EventSource('/api/speedtest')\n      \n      eventSource.onmessage = (event) => {\n        const data = JSON.parse(event.data)\n        if (data.status) {\n          setStatus(data.status)\n        }\n        if (data.result) {\n          setResult(data.result)\n          eventSource.close()\n          setStatus('complete')\n        }\n        if (data.error) {\n          throw new Error(data.error)\n        }\n      }\n\n      eventSource.onerror = () => {\n        if (status === 'running') {\n          eventSource.close()\n          setError('Connection lost - check server logs')\n          setStatus('error')\n        }\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to run speed test')\n      setStatus('error')\n    }\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-4 h-full\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-xl font-bold text-gray-900\">Network Speed Test</h2>\n        <button\n          onClick={runSpeedTest}\n          disabled={status !== 'idle' && status !== 'complete' && status !== 'error'}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\n        >\n          {status === 'idle' || status === 'complete' || status === 'error' ? 'Run Test' : 'Running Test...'}\n        </button>\n      </div>\n\n      {status !== 'idle' && status !== 'complete' && status !== 'error' && (\n        <div className=\"text-sm text-gray-600 mb-4\">\n          {status}\n        </div>\n      )}\n\n      {error && (\n        <div className=\"text-sm text-red-600 mb-4\">\n          Error: {error}\n        </div>\n      )}\n\n      {result && (\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          <div className=\"bg-gray-50 p-3 rounded-lg\">\n            <p className=\"text-gray-600\">Download</p>\n            <p className=\"text-xl font-bold text-gray-900\">{result.download.toFixed(2)} Mbps</p>\n            <p className=\"text-xs text-gray-500\">Jitter: {result.jitterDown}ms</p>\n          </div>\n          <div className=\"bg-gray-50 p-3 rounded-lg\">\n            <p className=\"text-gray-600\">Upload</p>\n            <p className=\"text-xl font-bold text-gray-900\">{result.upload.toFixed(2)} Mbps</p>\n            <p className=\"text-xs text-gray-500\">Jitter: {result.jitterUp}ms</p>\n          </div>\n          <div className=\"bg-gray-50 p-3 rounded-lg\">\n            <p className=\"text-gray-600\">Latency</p>\n            <p className=\"text-xl font-bold text-gray-900\">{result.idleLatency.toFixed(2)} ms</p>\n            <p className=\"text-xs text-gray-500\">Jitter: {result.jitterIdle}ms</p>\n          </div>\n          <div className=\"bg-gray-50 p-3 rounded-lg\">\n            <p className=\"text-gray-600\">Packet Loss</p>\n            <p className=\"text-xl font-bold text-gray-900\">{result.packetLoss.toFixed(2)}%</p>\n          </div>\n          <div className=\"col-span-2 bg-gray-50 p-3 rounded-lg\">\n            <div className=\"flex justify-between text-sm\">\n              <div>\n                <p className=\"text-gray-600\">Server</p>\n                <p className=\"text-gray-900\">{result.serverName}</p>\n              </div>\n              <div>\n                <p className=\"text-gray-600\">ISP</p>\n                <p className=\"text-gray-900\">{result.isp}</p>\n              </div>\n            </div>\n            {result.resultUrl && (\n              <a\n                href={result.resultUrl}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue-600 hover:text-blue-800 text-xs mt-2 inline-block\"\n              >\n                View Details â†’\n              </a>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2056, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2062, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/components/ConnectionTuning.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\n\ninterface BandwidthValue {\n  value: string;\n  unit: string;\n}\n\ninterface TuningConfig {\n  PRIMARY_EGRESS_BANDWIDTH: BandwidthValue;\n  PRIMARY_INGRESS_BANDWIDTH: BandwidthValue;\n  SECONDARY_EGRESS_BANDWIDTH: BandwidthValue;\n  SECONDARY_INGRESS_BANDWIDTH: BandwidthValue;\n  [key: string]: BandwidthValue | string;\n}\n\nexport default function ConnectionTuning() {\n  const [config, setConfig] = useState<TuningConfig>({\n    PRIMARY_EGRESS_BANDWIDTH: { value: '', unit: 'mbit' },\n    PRIMARY_INGRESS_BANDWIDTH: { value: '', unit: 'mbit' },\n    SECONDARY_EGRESS_BANDWIDTH: { value: '', unit: 'mbit' },\n    SECONDARY_INGRESS_BANDWIDTH: { value: '', unit: 'mbit' }\n  })\n  const [loading, setLoading] = useState(false)\n  const [activeConnection, setActiveConnection] = useState<string | null>(null)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    console.log('ConnectionTuning component mounted')\n    fetchConfig()\n    fetchConnectionStatus()\n    // Poll connection status every 5 seconds\n    const interval = setInterval(fetchConnectionStatus, 5000)\n    return () => {\n      console.log('ConnectionTuning component unmounting')\n      clearInterval(interval)\n    }\n  }, [])\n\n  const fetchConfig = async () => {\n    console.log('Starting fetchConfig...')\n    try {\n      console.log('Sending GET request to /api/network-config')\n      const response = await fetch('/api/network-config')\n      console.log('Received response:', response.status)\n      \n      if (!response.ok) {\n        const errorText = await response.text()\n        console.error('Error fetching config:', errorText)\n        throw new Error(`Failed to fetch config: ${response.status} ${errorText}`)\n      }\n      \n      const data = await response.json()\n      console.log('Received config data:', data)\n      \n      // Validate the received data\n      if (!data.PRIMARY_EGRESS_BANDWIDTH || !data.PRIMARY_INGRESS_BANDWIDTH) {\n        console.warn('Received incomplete config data:', data)\n      }\n      \n      setConfig(data)\n      console.log('Config state updated')\n    } catch (error) {\n      console.error('Error in fetchConfig:', error)\n      if (error instanceof Error) {\n        console.error('Error details:', {\n          name: error.name,\n          message: error.message,\n          stack: error.stack\n        })\n      }\n    }\n  }\n\n  const fetchConnectionStatus = async () => {\n    try {\n      const response = await fetch('/api/connection-status')\n      const data = await response.json()\n      if (data.active) {\n        setActiveConnection(data.active)\n      }\n    } catch (error) {\n      console.error('Failed to fetch connection status:', error)\n    }\n  }\n\n  const handleBandwidthChange = (key: string, value: string) => {\n    setConfig(prev => ({\n      ...prev,\n      [key]: {\n        ...((prev[key] as BandwidthValue) || { unit: 'mbit' }),\n        value: value\n      }\n    }))\n  }\n\n  const handleUnitChange = (key: string, unit: string) => {\n    setConfig(prev => ({\n      ...prev,\n      [key]: {\n        ...((prev[key] as BandwidthValue) || { value: '' }),\n        unit: unit\n      }\n    }))\n  }\n\n  const handleApply = async () => {\n    setLoading(true)\n    setError(null) // Clear any previous errors\n    \n    try {\n      // First, verify the config state\n      console.log('Raw config state:', config)\n      \n      // Try stringifying in a separate step to catch any serialization issues\n      let configJson\n      try {\n        configJson = JSON.stringify(config)\n        console.log('Serialized config:', configJson)\n      } catch (serializeError) {\n        setError('Failed to process configuration data')\n        throw serializeError\n      }\n      \n      // Create the request in steps to debug any request setup issues\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: configJson\n      }\n      \n      const response = await fetch('/api/network-config', requestOptions)\n      \n      if (!response.ok) {\n        const errorText = await response.text()\n        setError(`Failed to apply changes: ${errorText}`)\n        throw new Error(`Server returned ${response.status}: ${errorText}`)\n      }\n      \n      await response.json() // Consume the response but don't store it\n      await fetchConfig()\n      \n    } catch (error) {\n      console.error('Error in handleApply:', error)\n      if (error instanceof Error) {\n        setError(error.message)\n      } else {\n        setError('An unexpected error occurred')\n      }\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const switchGateway = async (type: 'PRIMARY' | 'SECONDARY') => {\n    setLoading(true)\n    try {\n      await fetch('/api/switch-gateway', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ type })\n      })\n    } catch (error) {\n      console.error('Failed to switch gateway:', error)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-900\">Connection Tuning</h2>\n      \n      <div className=\"grid grid-cols-2 gap-6\">\n        {/* Primary Connection */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center gap-2\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Primary</h3>\n            {activeConnection === 'PRIMARY' && (\n              <span className=\"text-sm font-medium text-green-600\">active</span>\n            )}\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-900\">Incoming Bandwidth</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"number\"\n                value={(config.PRIMARY_INGRESS_BANDWIDTH as BandwidthValue).value}\n                onChange={(e) => handleBandwidthChange('PRIMARY_INGRESS_BANDWIDTH', e.target.value)}\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-gray-900\"\n              />\n              <select\n                value={(config.PRIMARY_INGRESS_BANDWIDTH as BandwidthValue).unit}\n                onChange={(e) => handleUnitChange('PRIMARY_INGRESS_BANDWIDTH', e.target.value)}\n                className=\"mt-1 block w-24 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-gray-900\"\n              >\n                <option value=\"mbit\">Mbit</option>\n                <option value=\"gbit\">Gbit</option>\n              </select>\n            </div>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-900\">Outgoing Bandwidth</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"number\"\n                value={(config.PRIMARY_EGRESS_BANDWIDTH as BandwidthValue).value}\n                onChange={(e) => handleBandwidthChange('PRIMARY_EGRESS_BANDWIDTH', e.target.value)}\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-gray-900\"\n              />\n              <select\n                value={(config.PRIMARY_EGRESS_BANDWIDTH as BandwidthValue).unit}\n                onChange={(e) => handleUnitChange('PRIMARY_EGRESS_BANDWIDTH', e.target.value)}\n                className=\"mt-1 block w-24 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-gray-900\"\n              >\n                <option value=\"mbit\">Mbit</option>\n                <option value=\"gbit\">Gbit</option>\n              </select>\n            </div>\n          </div>\n          <button\n            onClick={() => switchGateway('PRIMARY')}\n            disabled={loading}\n            className=\"w-full bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 disabled:opacity-50\"\n          >\n            Switch to Primary\n          </button>\n        </div>\n\n        {/* Secondary Connection */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center gap-2\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Secondary</h3>\n            {activeConnection === 'SECONDARY' && (\n              <span className=\"text-sm font-medium text-green-600\">active</span>\n            )}\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-900\">Incoming Bandwidth</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"number\"\n                value={(config.SECONDARY_INGRESS_BANDWIDTH as BandwidthValue).value}\n                onChange={(e) => handleBandwidthChange('SECONDARY_INGRESS_BANDWIDTH', e.target.value)}\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-gray-900\"\n              />\n              <select\n                value={(config.SECONDARY_INGRESS_BANDWIDTH as BandwidthValue).unit}\n                onChange={(e) => handleUnitChange('SECONDARY_INGRESS_BANDWIDTH', e.target.value)}\n                className=\"mt-1 block w-24 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-gray-900\"\n              >\n                <option value=\"mbit\">Mbit</option>\n                <option value=\"gbit\">Gbit</option>\n              </select>\n            </div>\n          </div>\n          <div>\n            <label className=\"block text-sm font-medium text-gray-900\">Outgoing Bandwidth</label>\n            <div className=\"flex gap-2\">\n              <input\n                type=\"number\"\n                value={(config.SECONDARY_EGRESS_BANDWIDTH as BandwidthValue).value}\n                onChange={(e) => handleBandwidthChange('SECONDARY_EGRESS_BANDWIDTH', e.target.value)}\n                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-gray-900\"\n              />\n              <select\n                value={(config.SECONDARY_EGRESS_BANDWIDTH as BandwidthValue).unit}\n                onChange={(e) => handleUnitChange('SECONDARY_EGRESS_BANDWIDTH', e.target.value)}\n                className=\"mt-1 block w-24 rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 text-gray-900\"\n              >\n                <option value=\"mbit\">Mbit</option>\n                <option value=\"gbit\">Gbit</option>\n              </select>\n            </div>\n          </div>\n          <button\n            onClick={() => switchGateway('SECONDARY')}\n            disabled={loading}\n            className=\"w-full bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 disabled:opacity-50\"\n          >\n            Switch to Secondary\n          </button>\n        </div>\n      </div>\n\n      <div className=\"mt-6\">\n        <div className=\"flex justify-center items-center gap-4\">\n          {loading && (\n            <span className=\"text-sm text-gray-600\">\n              Applying changes...\n            </span>\n          )}\n          <button\n            onClick={handleApply}\n            disabled={loading}\n            className=\"w-64 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:opacity-50\"\n          >\n            {loading ? 'Applying...' : 'Apply Changes'}\n          </button>\n        </div>\n        {error && (\n          <div className=\"mt-2 text-sm text-red-600 text-center\">\n            Error: {error}\n          </div>\n        )}\n      </div>\n\n      <div className=\"mt-4 text-sm text-gray-900\">\n        <p>Note: Please run a speed test at{' '}\n          <a \n            href=\"https://www.waveform.com/tools/bufferbloat\" \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            className=\"text-blue-500 hover:underline\"\n          >\n            Waveform Bufferbloat Test\n          </a>\n          {' '}and set bandwidth to 85% of results.\n        </p>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 2680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2686, "column": 0}, "map": {"version":3,"sources":["file:///usr/local/darkflows/src/live-ifstat/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport DeviceChart from './components/DeviceChart'\nimport SysChart from './components/SysChart'\nimport ServerInfo from './components/ServerInfo'\nimport { NetworkDataProvider } from './contexts/NetworkDataContext'\nimport StatusBox from './components/StatusBox'\nimport PingChart from './components/PingChart'\nimport PingStats from './components/PingStats'\nimport SpeedTest from './components/SpeedTest'\nimport ConnectionTuning from './components/ConnectionTuning'\n\n\ninterface NetworkDevice {\n  name: string\n  type?: 'primary' | 'secondary' | 'internal'\n  label?: string\n  egressBandwidth?: string\n  ingressBandwidth?: string\n}\n\nexport default function HomePage() {\n  const [devices, setDevices] = useState<NetworkDevice[]>([])\n\n  useEffect(() => {\n    const fetchDevices = async () => {\n      try {\n        const response = await fetch('/api/devices')\n        const data = await response.json()\n        console.log('Frontend received devices:', data.devices)\n        // Sort devices: primary first, then secondary, then others alphabetically\n        const reorderedDevices = data.devices.sort((a: NetworkDevice, b: NetworkDevice) => {\n          if (a.type === 'primary') return -1\n          if (b.type === 'primary') return 1\n          if (a.type === 'secondary') return -1\n          if (b.type === 'secondary') return 1\n          return a.name.localeCompare(b.name)\n        })\n        console.log('Reordered devices:', reorderedDevices)\n        setDevices(reorderedDevices)\n      } catch (error) {\n        console.error('Failed to fetch network devices:', error)\n        setDevices([])\n      }\n    }\n\n    fetchDevices()\n  }, [])\n\n  return (\n    <NetworkDataProvider>\n      <div className=\"min-h-screen bg-gray-100 p-8\">\n        <h1 className=\"text-2xl font-bold mb-8 text-center text-gray-900\">Network & System Metrics</h1>\n\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          <div className=\"bg-white rounded-lg shadow-lg p-4\">\n            <ServerInfo />\n            <StatusBox />\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-lg p-4\">\n            <PingChart />\n            <PingStats />\n          </div>\n\n\n          <SpeedTest />\n          \n          <ConnectionTuning />\n          \n          {devices.map((device) => (\n            <DeviceChart \n              key={device.name} \n              device={device.name}\n              label={device.label}\n              type={device.type}\n              egressBandwidth={device.egressBandwidth}\n              ingressBandwidth={device.ingressBandwidth}\n            />\n          ))}\n\n          <SysChart metric=\"cpu\" />\n          <SysChart metric=\"mem\" />\n        </div>\n      </div>\n    </NetworkDataProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;;AAsBe,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAE1D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,MAAM;mDAAe;oBACnB,IAAI;wBACF,MAAM,WAAW,MAAM,MAAM;wBAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,QAAQ,GAAG,CAAC,8BAA8B,KAAK,OAAO;wBACtD,0EAA0E;wBAC1E,MAAM,mBAAmB,KAAK,OAAO,CAAC,IAAI;gFAAC,CAAC,GAAkB;gCAC5D,IAAI,EAAE,IAAI,KAAK,WAAW,OAAO,CAAC;gCAClC,IAAI,EAAE,IAAI,KAAK,WAAW,OAAO;gCACjC,IAAI,EAAE,IAAI,KAAK,aAAa,OAAO,CAAC;gCACpC,IAAI,EAAE,IAAI,KAAK,aAAa,OAAO;gCACnC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI;4BACpC;;wBACA,QAAQ,GAAG,CAAC,sBAAsB;wBAClC,WAAW;oBACb,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,oCAAoC;wBAClD,WAAW,EAAE;oBACf;gBACF;;YAEA;QACF;6BAAG,EAAE;IAEL,qBACE,6LAAC,yIAAA,CAAA,sBAAmB;kBAClB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAoD;;;;;;8BAGlE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,mIAAA,CAAA,UAAU;;;;;8CACX,6LAAC,kIAAA,CAAA,UAAS;;;;;;;;;;;sCAGZ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,kIAAA,CAAA,UAAS;;;;;8CACV,6LAAC,kIAAA,CAAA,UAAS;;;;;;;;;;;sCAIZ,6LAAC,kIAAA,CAAA,UAAS;;;;;sCAEV,6LAAC,yIAAA,CAAA,UAAgB;;;;;wBAEhB,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC,oIAAA,CAAA,UAAW;gCAEV,QAAQ,OAAO,IAAI;gCACnB,OAAO,OAAO,KAAK;gCACnB,MAAM,OAAO,IAAI;gCACjB,iBAAiB,OAAO,eAAe;gCACvC,kBAAkB,OAAO,gBAAgB;+BALpC,OAAO,IAAI;;;;;sCASpB,6LAAC,iIAAA,CAAA,UAAQ;4BAAC,QAAO;;;;;;sCACjB,6LAAC,iIAAA,CAAA,UAAQ;4BAAC,QAAO;;;;;;;;;;;;;;;;;;;;;;;AAK3B;GAnEwB;KAAA"}},
    {"offset": {"line": 2858, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}